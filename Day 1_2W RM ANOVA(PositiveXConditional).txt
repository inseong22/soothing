## 1일차 긍부정*조건별 2w rm anova

read_and_process_data1 <- function(file_path, time) {
  data <- read_excel(file_path)
  colnames(data)[1] <- "...1"  # 첫 번째 열 이름 변경
  data <- data.frame(data)
  data$id <- as.numeric(sub("s(\\d+)_.*", "\\1", data$`...1`))
  data$time <- time
  data$emo <- 'pos'
  data <- data[!is.na(data$pos_unc_avg), ] #
  colnames(data)[colnames(data) == 'pos_con_avg'] <- 'con'
  colnames(data)[colnames(data) == 'pos_unc_avg'] <- 'unc'
  colnames(data)[colnames(data) == 'pos_ctl_avg'] <- 'ctl'
  data <- data[,c("id", "emo", "con", "unc", "ctl")] #
  df <- melt(data, id.vars = c("id", "emo"), measure.vars = c("con", "unc", "ctl")) #
  df <- df %>%
    rename(treatment = variable, score = value)
  df$treatment <- factor(df$treatment, levels = c("con", "unc", "ctl")) #
  return(df)}
read_and_process_data2 <- function(file_path, time) {
  data <- read_excel(file_path)
  colnames(data)[1] <- "...1"  # 첫 번째 열 이름 변경
  data <- data.frame(data)
  data$id <- as.numeric(sub("s(\\d+)_.*", "\\1", data$`...1`))
  data$time <- time
  data$emo <- 'neg'
  data <- data[!is.na(data$neg_unc_avg), ] #
  colnames(data)[colnames(data) == 'neg_con_avg'] <- 'con'
  colnames(data)[colnames(data) == 'neg_unc_avg'] <- 'unc'
  colnames(data)[colnames(data) == 'neg_ctl_avg'] <- 'ctl'
  data <- data[,c("id", "emo", "con", "unc", "ctl")] #
  df <- melt(data, id.vars = c("id", "emo"), measure.vars = c("con", "unc", "ctl")) #
  df <- df %>%
    rename(treatment = variable, score = value)
  df$treatment <- factor(df$treatment, levels = c("con", "unc", "ctl")) #
  return(df)}

df56_p <- read_and_process_data1("C:/Users/Sweet/OneDrive/바탕 화면/1일차 56명/통합표준화, median, ai_stand, 1일차 긍부정조건별.xlsx", "1day")
df56_n <- read_and_process_data2("C:/Users/Sweet/OneDrive/바탕 화면/1일차 56명/통합표준화, median, ai_stand, 1일차 긍부정조건별.xlsx", "1day")
df56 <- rbind(df56_p, df56_n)
df56
summary(df56)
analyze_rm_anova(df56)
tworm_bxp(df56)


pwc <- df56 %>%
  group_by(emo) %>%
  pairwise_t_test(
    score ~ treatment, paired = TRUE,
    p.adjust.method = "bonferroni")
pwc

########아래는 함수목록##############
#0.데이터 요약 함수 #
summary <- function(df) {
  # 요약 통계량 계산
  summary_stats <- df %>%
    group_by(treatment, emo) %>%
    summarize(
      median_score = median(score, na.rm = TRUE),mean_score = mean(score, na.rm = TRUE),
      sd_score = sd(score, na.rm = TRUE),
      min_score = min(score, na.rm = TRUE),max_score = max(score, na.rm = TRUE),
      q1_score = quantile(score, probs = 0.25, na.rm = TRUE), q3_score = quantile(score, probs = 0.75, na.rm = TRUE))
  print(summary_stats)
  # Shapiro-Wilk 정규성 검정 결과 출력
  shapiro_results <- df %>%
    group_by(treatment, emo) %>%
    summarise(p_value = shapiro.test(score)$p.value)
  print(shapiro_results)
  # outlier check
  outliers <- df %>%
    group_by(treatment, emo) %>%
    rstatix::identify_outliers(score)
  print(outliers)
  # Q-Q Plot 그리기
  qqplot <- ggqqplot(df, "score", ggtheme = theme_bw()) +
    facet_grid(emo ~ treatment, labeller = "label_both") +
    labs(title = "Q-Q Plot of Score by Treatment and Emotion",
         x = "Theoretical Quantiles", y = "Sample Quantiles") +
    theme_minimal()
  # 그룹별 히스토그램 그리기
  histograms <- ggplot(df, aes(x = score, fill = treatment)) +
    geom_histogram(binwidth = 0.1, position = "dodge") +
    facet_grid(emo ~ treatment, scales = "free_y") +
    labs(title = "Histograms of Score by Treatment and Emotion",
         x = "Score", y = "Frequency") +
    theme_minimal()
  # Q-Q Plot과 히스토그램을 한 페이지에 출력
  grid.arrange(qqplot, histograms, ncol = 2)}

#1. 2way rm anova 분석진행
library(rstatix)
analyze_rm_anova <- function(data) {
  res.aov <- anova_test(  
    data = data, dv = score, wid = id,
    within = c(treatment, emo))
  anova_table <- get_anova_table(res.aov)
  print(anova_table)
  # interaction effect이 있다면
  # 1-1) Effect of treatment at each time point
  one.way <- data %>% group_by(emo) %>%
    anova_test(dv = score, wid = id, within = treatment) %>%
    get_anova_table() %>%
    adjust_pvalue(method = "bonferroni")
  print(one.way)
  # 1-2) Pairwise comparisons between treatment groups
  pwc <- data %>%
    group_by(emo) %>%
    pairwise_t_test(
      score ~ treatment, paired = TRUE,
      p.adjust.method = "bonferroni")
  print(pwc)
  # 2-1) Effect of time at each level of treatment
  one.way2 <- data %>%
    group_by(treatment) %>%
    anova_test(dv = score, wid = id, within = emo) %>%
    get_anova_table() %>%
    adjust_pvalue(method = "bonferroni")
  print(one.way2)
  # 2-2) Pairwise comparisons between time points
  pwc2 <- data %>%
    group_by(treatment) %>%
    pairwise_t_test(
      score ~ emo, paired = TRUE,
      p.adjust.method = "bonferroni")
  print(pwc2)
  # interaction effect이 없다면
  # 1) comparisons for treatment variable
  print(data %>%
          pairwise_t_test(
            score ~ treatment, paired = TRUE, 
            p.adjust.method = "bonferroni"))
  
  # 2) comparisons for time variable
  print(data %>%
          pairwise_t_test(
            score ~ emo, paired = TRUE, 
            p.adjust.method = "bonferroni"))}   

#2. 사후검정 반영된 bxplot 그리기
tworm_bxp <- function(data, title, low, up, c) {
  group_means <- data %>%
    group_by(emo, treatment) %>%
    summarise(mean_score = mean(score)) %>%
    arrange(emo, treatment)  # 시간과 처리 순서대로 정렬
  bxp <- ggboxplot(
    data, x = "emotion", y = "score",
    color = "treatment", palette = c,
    add = "mean_point", mean.color = "black", mean.shape = 21, mean.size = 2,
    fill = "treatment", legend = "top",
    title = title, xlab = "Emotion", ylab = "Score",
    ylim = c(low, up),
    theme = theme_minimal() +
      theme(
        plot.title = element_text(family = "Arial", face = "bold", size = 12, hjust = 0.5),
        axis.title = element_text(family = "Arial", size = 12),
        legend.text = element_text(family = "Arial", size = 10),
        legend.title = element_text(family = "Arial", size = 11),
        axis.text.x = element_text(angle = 45, hjust = 1),
        panel.border = element_rect(color = "black", fill = NA))) +
    geom_point(data = group_means, aes(x = emo, y = mean_score, color = treatment), 
               size = 2, position = position_dodge(width = 0.8), shape = 21, fill = "white", stroke = 1) +
    scale_color_manual(values = c("conscious" = "#F8766D", "unconscious" = "#00BFC4", "control" = "#F5F5F5"))
  # Paired t-test
  res.aov <- anova_test(  
    data = data, dv = score, wid = id,
    within = c(treatment, emo))
  anova_table <- get_anova_table(res.aov)
  pwc <- data %>%
    group_by(emo) %>%
    pairwise_t_test(
      score ~ treatment, paired = TRUE,
      p.adjust.method = "bonferroni")
  pwc <- pwc %>% add_xy_position(x = "emo")
  bxp + 
    stat_pvalue_manual(pwc, tip.length = 0, hide.ns = TRUE) +
    labs(
      subtitle = get_test_label(res.aov, detailed = TRUE),
      caption = get_pwc_label(pwc))}

#interaction plot   
draw_interaction_plot <- function(data) {
  group_means <- data %>%
    group_by(time, treatment) %>%
    summarise(mean_score = mean(score)) %>%
    arrange(time, treatment)
  mean_plot <- ggplot(group_means, aes(x = time, y = mean_score, color = treatment, group = treatment)) +
    geom_line() +  # 선 그래프
    geom_point() +  # 점 그래프
    labs(title = "Mean Scores by Time and Treatment", x = "Time", y = "Mean Score", color = "Treatment") +  # 축 및 범례 레이블 지정
    scale_color_manual(values = c("red", "blue", "black")) + ylim(-1,1) +  # 선 색상 지정
    theme_minimal()  # 테마 설정
  group_med <- data %>%
    group_by(time, treatment) %>%
    summarise(median_score = median(score))
  median_plot <- ggplot(group_med, aes(x = time, y = median_score, color = treatment, group = treatment)) +
    geom_line() +  # 선 그래프
    geom_point() +  # 점 그래프
    labs(title = "Median Scores by Time and Treatment", x = "Time", y = "Median Score", color = "Treatment") +  # 축 및 범례 레이블 지정
    scale_color_manual(values = c("red", "blue", "black")) + ylim(-1,1) + # 선 색상 지정
    theme_minimal()  # 테마 설정
  grid.arrange(mean_plot, median_plot, ncol = 2)} # 두 그래프를 한 화면에 출력

